/**
 * @fileoverview Firestore Security Rules for the college canteen ordering system.
 *
 * Core Philosophy:
 * This ruleset provides public read and write access to all the data.
 *
 * Data Structure:
 * - /inventory/{itemId}: Collection of menu items.
 * - /orders/{orderId}: Collection of customer orders.
 * - /orderItems/{orderItemId}: Collection of items within orders.
 *
 * Key Security Decisions:
 * - Public read and write access for all collections.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Grants public read and write access to the inventory collection.
     * @path /inventory/{itemId}
     * @allow (get, list) Any user can read menu items.
     * @allow (create, update, delete) Any user can create, update, and delete menu items.
     * @deny None
     * @principle Grants full public access to the inventory.
     */
    match /inventory/{itemId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Grants public read and write access to the orders collection.
     * @path /orders/{orderId}
     * @allow (get, list) Any user can read order details.
     * @allow (create, update, delete) Any user can create, update, and delete orders.
     * @deny None
     * @principle Grants full public access to orders.
     */
    match /orders/{orderId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Grants public read and write access to the order items collection.
     * @path /orderItems/{orderItemId}
     * @allow (get, list) Any user can read order items.
     * @allow (create, update, delete) Any user can create, update, and delete order items.
     * @deny None
     * @principle Grants full public access to order items.
     */
    match /orderItems/{orderItemId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }
  }
}