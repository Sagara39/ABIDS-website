/**
 * @fileOverview Firestore Security Rules for the college canteen ordering system.
 *
 * Core Philosophy:
 * This ruleset prioritizes simplicity and security. It uses a combination of public read access for static content (menu items) and authenticated access for user-specific data (orders).
 *
 * Data Structure:
 * - /menuItems/{menuItemId}: Publicly readable collection of menu items.
 * - /orders/{orderId}: Collection of user orders, accessible only to authenticated users.
 * - /orderItems/{orderItemId}: Collection of order items, accessible only to authenticated users.
 *
 * Key Security Decisions:
 * - Menu items are publicly readable to simplify the app experience.
 * - Orders are only accessible to authenticated users.
 * - No user listing is allowed.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Grants public read access to menu items. Writes are disallowed.
     * @path /menuItems/{menuItemId}
     * @allow (get, list) Any user can read menu items.
     * @deny (create, update, delete) No user can create, update, or delete menu items through the client.  Data should be managed via the Firebase Admin SDK.
     * @principle Allows public read access for static menu data.
     */
    match /menuItems/{menuItemId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Grants authenticated users full access to their own orders.
     * @path /orders/{orderId}
     * @allow (create) An authenticated user can create an order.
     * @allow (get, list) An authenticated user can read their own orders.
     * @allow (update, delete) An authenticated user can update or delete their own orders.
     * @deny (create, update, delete) An unauthenticated user cannot create, update, or delete orders.
     * @principle Enforces user-specific access to orders based on authentication.
     */
    match /orders/{orderId} {
      allow read, create, update, delete: if isSignedIn();
    }

    /**
     * @description Grants authenticated users full access to order items.
     * @path /orderItems/{orderItemId}
     * @allow (create) An authenticated user can create an order item.
     * @allow (get, list) An authenticated user can read order items.
     * @allow (update, delete) An authenticated user can update or delete order items.
     * @deny (create, update, delete) An unauthenticated user cannot create, update, or delete order items.
     * @principle Enforces user-specific access to order items based on authentication.
     */
    match /orderItems/{orderItemId} {
      allow read, create, update, delete: if isSignedIn();
    }

    function isSignedIn() {
      return request.auth != null;
    }
  }
}