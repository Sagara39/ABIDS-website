/**
 * @fileoverview Firestore Security Rules for the college canteen ordering system.
 *
 * Core Philosophy:
 * This ruleset prioritizes simplicity and security for a canteen ordering system.
 * It leverages structural segregation for public (inventory) and private (orders) data.
 * All write operations are explicitly secured; there are no `if true;` write rules.
 *
 * Data Structure:
 * - /inventory/{itemId}: Stores menu items, publicly readable.
 * - /orders/{orderId}: Stores customer orders; anyone can create an order.
 * - /orderItems/{orderItemId}: Stores individual items within an order; anyone can create an orderItem.
 *
 * Key Security Decisions:
 * - Inventory is publicly readable, as it's intended for all users to view the menu.
 * - Listing of orders and orderItems is allowed for all users.
 *
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Allows anyone to read the canteen menu items. Writes are not allowed
     * @path /inventory/{itemId}
     * @allow (get, list)
     * @deny (create, update, delete)
     * @principle Public read access for menu items, no write permissions.
     */
    match /inventory/{itemId} {
      allow get, list: if true;
      allow create, update, delete: if false;
    }

    /**
     * @description Allows anyone to create an order
     * @path /orders/{orderId}
     * @allow (create)
     * @deny (get, list, update, delete)
     * @principle Public can create orders, no get, list, update, delete permissions.
     */
    match /orders/{orderId} {
      allow create: if true;
      allow get, list, update, delete: if false;
    }

    /**
     * @description Allows anyone to create orderItems
     * @path /orderItems/{orderItemId}
     * @allow (create)
     * @deny (get, list, update, delete)
     * @principle Public can create orderItems, no get, list, update, delete permissions.
     */
    match /orderItems/{orderItemId} {
      allow create: if true;
      allow get, list, update, delete: if false;
    }
  }
}