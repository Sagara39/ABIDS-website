{
  "entities": {
    "MenuItem": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "MenuItem",
      "type": "object",
      "description": "Represents an item on the canteen menu.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the menu item."
        },
        "name": {
          "type": "string",
          "description": "Name of the menu item."
        },
        "description": {
          "type": "string",
          "description": "Description of the menu item."
        },
        "price": {
          "type": "number",
          "description": "Price of the menu item."
        },
        "imageUri": {
          "type": "string",
          "description": "URI of the image for the menu item."
        }
      },
      "required": [
        "id",
        "name",
        "description",
        "price",
        "imageUri"
      ]
    },
    "Order": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Order",
      "type": "object",
      "description": "Represents a customer order.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the order."
        },
        "orderDate": {
          "type": "string",
          "description": "Date and time the order was placed.",
          "format": "date-time"
        },
        "totalAmount": {
          "type": "number",
          "description": "Total amount of the order."
        },
        "orderItems": {
          "type": "array",
          "description": "List of order items in the order.",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "id",
        "orderDate",
        "totalAmount",
        "orderItems"
      ]
    },
    "OrderItem": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "OrderItem",
      "type": "object",
      "description": "Represents a single item within an order.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the order item."
        },
        "orderId": {
          "type": "string",
          "description": "Reference to Order. (Relationship: Order 1:N OrderItem)"
        },
        "menuItemId": {
          "type": "string",
          "description": "Reference to MenuItem. (Relationship: MenuItem 1:N OrderItem)"
        },
        "quantity": {
          "type": "number",
          "description": "Quantity of the menu item in the order."
        },
        "subtotal": {
          "type": "number",
          "description": "Subtotal for this order item (price * quantity)."
        }
      },
      "required": [
        "id",
        "orderId",
        "menuItemId",
        "quantity",
        "subtotal"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/menuItems/{menuItemId}",
        "definition": {
          "entityName": "MenuItem",
          "schema": {
            "$ref": "#/backend/entities/MenuItem"
          },
          "description": "Collection of menu items available in the canteen.",
          "params": [
            {
              "name": "menuItemId",
              "description": "Unique identifier for the menu item."
            }
          ]
        }
      },
      {
        "path": "/orders/{orderId}",
        "definition": {
          "entityName": "Order",
          "schema": {
            "$ref": "#/backend/entities/Order"
          },
          "description": "Collection of orders placed by customers.",
          "params": [
            {
              "name": "orderId",
              "description": "Unique identifier for the order."
            }
          ]
        }
      },
      {
        "path": "/orderItems/{orderItemId}",
        "definition": {
          "entityName": "OrderItem",
          "schema": {
            "$ref": "#/backend/entities/OrderItem"
          },
          "description": "Collection of order items, each referencing an order and a menu item.",
          "params": [
            {
              "name": "orderItemId",
              "description": "Unique identifier for the order item."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to support a college canteen ordering system, emphasizing simplicity and scalability. It incorporates the MenuItem and Order entities. We'll use simple collections without complex subcollections, to minimize security rule complexity and Firestore reads. The database should be easily debuggable, and it should authorize access solely on the `request.auth.uid` to prevent spoofing.\n\nTo achieve Authorization Independence, we'll use public access for `menuItems` collection, since they are not user-specific and should be accessible to anyone using the app.\n\nStructural Segregation is achieved by keeping `menuItems` as a separate collection, distinct from user-specific data such as `orders`. This simplifies security rules, as there is no need to differentiate access based on user roles within the same collection.\n\nAccess Modeling uses simple collections. Orders are placed under the `orders` collection.\n\nData Clarity and Predictability is maintained through consistent naming conventions and explicit state modeling. For example, the `orderDate` field in the `Order` entity is consistently named and formatted."
  }
}